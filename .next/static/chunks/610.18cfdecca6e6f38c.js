"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[610],{9610:function(e,t,r){r.r(t),r.d(t,{createOrReadKeyless:function(){return createOrReadKeyless},removeKeyless:function(){return removeKeyless},safeParseClerkFile:function(){return safeParseClerkFile}});var n,i,s,o=r(2096);r(9646),r(1023),r(7382);var l=r(8299);n=o.WX,async(...e)=>{let{data:t,errors:r}=await n(...e);if(r)throw r[0];return t};var a=r(4474);let c={secretKey:a.Cn,publishableKey:a.Am,apiUrl:a.T5,apiVersion:a.Gn,userAgent:"@clerk/nextjs@6.18.0",proxyUrl:a.NM,domain:a.yK,isSatellite:a.lo,sdkMetadata:a.nE,telemetry:{disabled:a.CY,debug:a.w4}},createClerkClientWithOptions=e=>(function(e){let t={...e},r=(0,o.gf)(t),n=(0,o.sA)({options:t,apiClient:r}),i=new l.NS({...e.telemetry,publishableKey:t.publishableKey,secretKey:t.secretKey,samplingRate:.1,...t.sdkMetadata?{sdk:t.sdkMetadata.name,sdkVersion:t.sdkMetadata.version}:{}});return{...r,...n,telemetry:i}})({...c,...e});var d=Object.getOwnPropertyNames,u=(i={"src/runtime/browser/safe-node-apis.js"(e,t){t.exports={fs:void 0,path:void 0,cwd:void 0}}},function(){return s||(0,i[d(i)[0]])((s={exports:{}}).exports,s),s.exports})();let throwMissingFsModule=e=>{throw Error(`Clerk: ${e} is missing. This is an internal error. Please contact Clerk's support.`)},nodeFsOrThrow=()=>(u.fs||throwMissingFsModule("fs"),u.fs),nodePathOrThrow=()=>(u.path||throwMissingFsModule("path"),u.path),nodeCwdOrThrow=()=>(u.cwd||throwMissingFsModule("cwd"),u.cwd),h=".clerk",f="clerk.lock",generatePath=(...e)=>{let t=nodePathOrThrow(),r=nodeCwdOrThrow();return t.join(r(),h,...e)},g=".tmp",getKeylessConfigurationPath=()=>generatePath(g,"keyless.json"),getKeylessReadMePath=()=>generatePath(g,"README.md"),w=!1;function safeParseClerkFile(){let{readFileSync:e}=nodeFsOrThrow();try{let t;let r=getKeylessConfigurationPath();try{t=e(r,{encoding:"utf-8"})||"{}"}catch{t="{}"}return JSON.parse(t)}catch{return}}let lockFileWriting=()=>{let{writeFileSync:e}=nodeFsOrThrow();w=!0,e(f,"This file can be deleted. Please delete this file and refresh your application",{encoding:"utf8",mode:"0777",flag:"w"})},unlockFileWriting=()=>{let{rmSync:e}=nodeFsOrThrow();try{e(f,{force:!0,recursive:!0})}catch{}w=!1},isFileWritingLocked=()=>{let{existsSync:e}=nodeFsOrThrow();return w||e(f)};async function createOrReadKeyless(){let{writeFileSync:e,mkdirSync:t}=nodeFsOrThrow();if(isFileWritingLocked())return null;lockFileWriting();let r=getKeylessConfigurationPath(),n=getKeylessReadMePath();t(generatePath(g),{recursive:!0}),function(){let{existsSync:e,writeFileSync:t,readFileSync:r,appendFileSync:n}=nodeFsOrThrow(),i=nodePathOrThrow(),s=nodeCwdOrThrow(),o=i.join(s(),".gitignore");e(o)||t(o,"");let l=r(o,"utf-8");l.includes(h+"/")||n(o,`
# clerk configuration (can include secrets)
/${h}/
`)}();let i=safeParseClerkFile();if((null==i?void 0:i.publishableKey)&&(null==i?void 0:i.secretKey))return unlockFileWriting(),i;let s=createClerkClientWithOptions({}),o=await s.__experimental_accountlessApplications.createAccountlessApplication().catch(()=>null);if(o){e(r,JSON.stringify(o),{encoding:"utf8",mode:"0777",flag:"w"});let t=`
## DO NOT COMMIT
This directory is auto-generated from \`@clerk/nextjs\` because you are running in Keyless mode. Avoid committing the \`.clerk/\` directory as it includes the secret key of the unclaimed instance.
  `;e(n,t,{encoding:"utf8",mode:"0777",flag:"w"})}return unlockFileWriting(),o}function removeKeyless(){let{rmSync:e}=nodeFsOrThrow();if(!isFileWritingLocked()){lockFileWriting();try{e(generatePath(),{force:!0,recursive:!0})}catch{}unlockFileWriting()}}}}]);